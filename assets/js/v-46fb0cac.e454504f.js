(self.webpackChunksite=self.webpackChunksite||[]).push([[1672],{7270:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-46fb0cac",path:"/guide/advanced/icestark.html",title:"微前端 icestark",lang:"zh-CN",frontmatter:{title:"微前端 icestark",order:3},excerpt:"",headers:[{level:2,title:"框架应用",slug:"框架应用",children:[{level:3,title:"添加插件 build-plugin-icestark",slug:"添加插件-build-plugin-icestark",children:[]},{level:3,title:"应用入口改造",slug:"应用入口改造",children:[]}]},{level:2,title:"微应用",slug:"微应用",children:[{level:3,title:"添加插件 build-plugin-icestark",slug:"添加插件-build-plugin-icestark-1",children:[]},{level:3,title:"应用入口改造",slug:"应用入口改造-1",children:[]}]},{level:2,title:"常见问题",slug:"常见问题",children:[{level:3,title:"如何监听微应用切换",slug:"如何监听微应用切换",children:[]},{level:3,title:"动态修改微应用列表",slug:"动态修改微应用列表",children:[]},{level:3,title:"UMD 规范微应用",slug:"umd-规范微应用",children:[]}]}],filePathRelative:"guide/advanced/icestark.md",git:{updatedTime:1621428933e3,contributors:[]}}},7019:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="框架应用"><a class="header-anchor" href="#框架应用">#</a> 框架应用</h2><p>通过模板快速创建一个微前端的框架应用：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> init ice icestark-framework @icedesign/stark-layout-scaffold\n$ <span class="token builtin class-name">cd</span> icestark-framework\n$ <span class="token function">npm</span> <span class="token function">install</span>\n$ <span class="token function">npm</span> start\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果不是通过模板创建，则需要按照下面的步骤进行改造：</p><h3 id="添加插件-build-plugin-icestark"><a class="header-anchor" href="#添加插件-build-plugin-icestark">#</a> 添加插件 build-plugin-icestark</h3><p>安装插件依赖：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> i --save-dev build-plugin-icestark\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在 <code>build.json</code> 里引入插件：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token string">&quot;build-plugin-icestark&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 防止与微应用的 webpackJSONP 冲突</span>\n      <span class="token property">&quot;uniqueName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;frameworkJsonp&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token string">&quot;build-plugin-fusion&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;themeConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 防止与微应用里的基础组件 css prefix 冲突</span>\n        <span class="token property">&quot;css-prefix&quot;</span><span class="token operator">:</span> <span class="token string">&quot;next-icestark-&quot;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="应用入口改造"><a class="header-anchor" href="#应用入口改造">#</a> 应用入口改造</h3><p>应用入口 <code>src/app.ts</code> 中配置框架应用的一些运行时信息：</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code>import { runApp } from &#39;ice&#39;\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ConfigProvider } from &#39;@alifd/next&#39;;\n</span><span class="token prefix inserted">+</span><span class="token line">import NotFound from &#39;@/components/NotFound&#39;;\n</span><span class="token prefix inserted">+</span><span class="token line">import BasicLayout from &#39;@/layouts/BasicLayout&#39;;\n</span></span>\nconst appConfig = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> app: {\n</span><span class="token prefix unchanged"> </span><span class="token line">   rootId: &#39;ice-container&#39;,\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    addProvider: ({ children }) =&gt; (\n</span><span class="token prefix inserted">+</span><span class="token line">      &lt;ConfigProvider prefix=&quot;next-icestark-&quot;&gt;{children}&lt;/ConfigProvider&gt;\n</span><span class="token prefix inserted">+</span><span class="token line">    ),\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> },\n</span><span class="token prefix unchanged"> </span><span class="token line"> router: {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    type: &#39;browser&#39;,\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> },\n</span><span class="token prefix unchanged"> </span><span class="token line"> icestark: {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    type: &#39;framework&#39;,\n</span><span class="token prefix inserted">+</span><span class="token line">    Layout: BasicLayout,\n</span><span class="token prefix inserted">+</span><span class="token line">    getApps: async () =&gt; {\n</span><span class="token prefix inserted">+</span><span class="token line">      const apps = [{\n</span><span class="token prefix inserted">+</span><span class="token line">        path: &#39;/seller&#39;,\n</span><span class="token prefix inserted">+</span><span class="token line">        title: &#39;商家平台&#39;,\n</span><span class="token prefix inserted">+</span><span class="token line">        url: [\n</span><span class="token prefix inserted">+</span><span class="token line">          &#39;//ice.alicdn.com/icestark/child-seller-react/index.js&#39;,\n</span><span class="token prefix inserted">+</span><span class="token line">          &#39;//ice.alicdn.com/icestark/child-seller-react/index.css&#39;,\n</span><span class="token prefix inserted">+</span><span class="token line">        ],\n</span><span class="token prefix inserted">+</span><span class="token line">      }];\n</span><span class="token prefix inserted">+</span><span class="token line">      return apps;\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">    appRouter: {\n</span><span class="token prefix inserted">+</span><span class="token line">      NotFoundComponent: NotFound,\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> },\n</span></span>};\n\nrunApp(appConfig);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p><code>appConfig.icestark</code> 完整的配置项说明：</p><ul><li>type: string, framework|child</li><li>Layout: Component, 系统对应的布局组件</li><li>getApps: function，获取所有微应用数据，单个微应用的完整配置字段请参考 icestark 文档</li><li>appRouter: <ul><li>NotFoundComponent: 404 组件</li><li>LoadingComponent: 应用切换时的 Loading 组件</li></ul></li></ul><h2 id="微应用"><a class="header-anchor" href="#微应用">#</a> 微应用</h2><p>通过模板快速创建一个微应用：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建微应用</span>\n$ <span class="token function">npm</span> init ice icestark-child @icedesign/stark-child-scaffold\n$ <span class="token builtin class-name">cd</span> icestark-child\n$ <span class="token function">npm</span> <span class="token function">install</span>\n$ <span class="token function">npm</span> start\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>如果不是通过模板创建，则需要按照下面的步骤进行改造：</p><h3 id="添加插件-build-plugin-icestark-1"><a class="header-anchor" href="#添加插件-build-plugin-icestark-1">#</a> 添加插件 build-plugin-icestark</h3><p>安装插件依赖：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> i --save-dev build-plugin-icestark\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在 <code>build.json</code> 里引入插件：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token string">&quot;build-plugin-icestark&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;umd&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="应用入口改造-1"><a class="header-anchor" href="#应用入口改造-1">#</a> 应用入口改造</h3><p>在应用入口 <code>src/app.ts</code> 中配置微应用相关的信息：</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code>import { runApp } from &#39;ice&#39;\n\nconst appConfig = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> app: {\n</span><span class="token prefix unchanged"> </span><span class="token line">   rootId: &#39;ice-container&#39;,\n</span><span class="token prefix unchanged"> </span><span class="token line"> },\n</span><span class="token prefix unchanged"> </span><span class="token line"> router: {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    type: &#39;browser&#39;,\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> },\n</span><span class="token prefix unchanged"> </span><span class="token line"> icestark: {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    type: &#39;child&#39;,\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> },\n</span></span>};\n\nrunApp(appConfig)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>只需要这么简单，你的 SPA 应用就可以变成微应用了。</p><h2 id="常见问题"><a class="header-anchor" href="#常见问题">#</a> 常见问题</h2><h3 id="如何监听微应用切换"><a class="header-anchor" href="#如何监听微应用切换">#</a> 如何监听微应用切换</h3><p><code>icestark</code> 通过 <code>onRouteChange</code>、<code>onAppEnter</code> 和 <code>onAppLeave</code> 来监听微应用间的切换，在 icejs 研发框架下可以通过在对应的 Layout 中实现相关钩子的监听。Layout 中接收 props 属性如下：</p><ul><li>pathname：微应用路由切换信息，对应 <code>onRouteChange</code></li><li>appEnter：渲染微应用的信息， <code>onAppEnter</code></li><li>appLeave：卸载微应用的信息，对应 <code>onAppLeave</code></li></ul><p>在 Layout 使用相关属性时，结合对应属性是否发生变更来执行相应操作：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n<span class="token keyword">const</span> <span class="token function-variable function">BasicLayout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> pathname<span class="token punctuation">,</span> appLeave<span class="token punctuation">,</span> appEnter<span class="token punctuation">,</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">微应用路由发生变化：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pathname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>pathname<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">卸载微应用：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>appLeave<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>appLeave<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">渲染微应用：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>appEnter<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>appEnter<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n      <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="动态修改微应用列表"><a class="header-anchor" href="#动态修改微应用列表">#</a> 动态修改微应用列表</h3><p>初始化微应用列表可以如上文介绍在应用入口 <code>src/app.ts</code> 中配置 <code>getApps</code> 属性即可，如果需要动态修改微应用列表，可以通过 Layout 接收的 <code>updateApps</code> 属性进行修改：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">BasicLayout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> updateApps<span class="token punctuation">,</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">updateApps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">&#39;/seller&#39;</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;商家平台&#39;</span><span class="token punctuation">,</span>\n      url<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&#39;//ice.alicdn.com/icestark/child-seller-react/index.js&#39;</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;//ice.alicdn.com/icestark/child-seller-react/index.css&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n      <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="umd-规范微应用"><a class="header-anchor" href="#umd-规范微应用">#</a> UMD 规范微应用</h3><p>icestark 从 <code>1.6.0</code> 开始支持并推荐使用 UMD 规范的微应用，在微应用层面可以更少的降低跟主应用的耦合：</p><ul><li>微应用依赖的 <code>build-plugin-icestark</code> 版本需要高于 <code>2.0.0</code> 才能支持构建出 UMD 规范的微应用</li><li>主应用依赖的 <code>@ice/stark</code> 版本需要高于 <code>1.6.0</code> 才能支持渲染 UMD 规范的微应用</li></ul><h4 id="微应用导出-umd-规范的产物"><a class="header-anchor" href="#微应用导出-umd-规范的产物">#</a> 微应用导出 UMD 规范的产物</h4><p>在 <code>build.json</code> 中配置 umd 属性即可导出标准 UMD 规范的微应用：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">&quot;build-plugin-icestark&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;umd&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',42),e={render:function(n,s){return p}}}}]);