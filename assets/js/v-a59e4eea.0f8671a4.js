(self.webpackChunksite=self.webpackChunksite||[]).push([[4053],{7935:(e,l,t)=>{"use strict";t.r(l),t.d(l,{data:()=>r});const r={key:"v-a59e4eea",path:"/guide/advanced/publish.html",title:"前端资源发布",lang:"zh-CN",frontmatter:{title:"前端资源发布",order:17},excerpt:"",headers:[{level:2,title:"资源发布",slug:"资源发布",children:[{level:3,title:"CDN 发布",slug:"cdn-发布",children:[]},{level:3,title:"后端服务托管",slug:"后端服务托管",children:[]}]},{level:2,title:"版本号管理",slug:"版本号管理",children:[]}],filePathRelative:"guide/advanced/publish.md",git:{updatedTime:1621514473e3,contributors:[]}}},2683:(e,l,t)=>{"use strict";t.r(l),t.d(l,{default:()=>U});var r=t(6252);const a=(0,r.Uk)("如果是阿里内部同学，请参考 "),n={href:"https://yuque.alibaba-inc.com/ice/rdy99p/angwyx",target:"_blank",rel:"noopener noreferrer"},d=(0,r.Uk)("文档"),s=(0,r.Wm)("hr",null,null,-1),c=(0,r.Wm)("p",null,[(0,r.Uk)("前面的章节提到过前端代码开发完成后我们会执行 "),(0,r.Wm)("code",null,"npm run build"),(0,r.Uk)(" 命令来进行构建，接下来需要我们需要在 HTML 或者后端模板中引入构建好的 js&css 文件，这时候就需要将构建好的文件进行发布，静态资源的发布一般有两种方式：CDN 发布、通过后端服务托管。")],-1),i=(0,r.Wm)("h2",{id:"资源发布"},[(0,r.Wm)("a",{class:"header-anchor",href:"#资源发布"},"#"),(0,r.Uk)(" 资源发布")],-1),u=(0,r.Wm)("h3",{id:"cdn-发布"},[(0,r.Wm)("a",{class:"header-anchor",href:"#cdn-发布"},"#"),(0,r.Uk)(" CDN 发布")],-1),h=(0,r.Uk)("推荐通过 "),o={href:"https://cn.aliyun.com/product/oss",target:"_blank",rel:"noopener noreferrer"},p=(0,r.Uk)("阿里云 OSS"),m=(0,r.Uk)(" 服务进行非覆盖式发布，每个版本建一个 "),k=(0,r.Wm)("code",null,"x.y.z",-1),W=(0,r.Uk)(" 的文件夹，然后将 "),b=(0,r.Wm)("code",null,"build",-1),f=(0,r.Uk)(" 资源复制进去，接着就可以通过 url 访问这些 CDN 资源了。"),g=(0,r.uE)('<h3 id="后端服务托管"><a class="header-anchor" href="#后端服务托管">#</a> 后端服务托管</h3><p>一般情况下你只需要使用对应的 web 框架启动一个静态文件服务器，然后将构建好的 <code>build</code> 资源复制到对应目录下，即可在模板中通过 <code>https://127.0.0.1:6001/static/js/index.js</code> 的方式引入对应资源。</p><h2 id="版本号管理"><a class="header-anchor" href="#版本号管理">#</a> 版本号管理</h2><p>为了便于代码的回滚，我们推荐使用非覆盖式发布前端资源，每一次发布都会产生一个新的资源地址，比如：</p><ul><li>0.1.0 版本：https://g.alicdn.com/creator/assets/0.1.0/index.js</li><li>0.1.1 版本：https://g.alicdn.com/creator/assets/0.1.1/index.js</li></ul><p>这样我们每次发布前端资源后，只需要更新下后端模板里引用的前端资源地址即可。但是如果每次前端发布都需要更改后端代码同时发布一次后端应用，这样效率太低，因此我们推荐通过一些配置管理系统来管理前端版本，只需要在系统上点击发布即可将新的版本同步给对应的后端应用。</p>',6),U={render:function(e,l){const t=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.j4)(r.HY,null,[(0,r.Wm)("p",null,[a,(0,r.Wm)("a",n,[d,(0,r.Wm)(t)])]),s,c,i,u,(0,r.Wm)("p",null,[h,(0,r.Wm)("a",o,[p,(0,r.Wm)(t)]),m,k,W,b,f]),g],64)}}}}]);