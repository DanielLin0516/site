(self.webpackChunksite=self.webpackChunksite||[]).push([[6222],{241:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-19eccf48",path:"/guide/advanced/mpa.html",title:"多页应用 MPA",lang:"zh-CN",frontmatter:{title:"多页应用 MPA",order:1},excerpt:"",headers:[{level:2,title:"工程配置",slug:"工程配置",children:[]},{level:2,title:"目录结构",slug:"目录结构",children:[]},{level:2,title:"不同的 entry 应用类型",slug:"不同的-entry-应用类型",children:[{level:3,title:"SPA 类型的 entry",slug:"spa-类型的-entry",children:[]},{level:3,title:"组件类型的 entry",slug:"组件类型的-entry",children:[]}]},{level:2,title:"指定不同 entry 的 HTML 模板",slug:"指定不同-entry-的-html-模板",children:[]},{level:2,title:"高级用法",slug:"高级用法",children:[{level:3,title:"调试时指定单个 entry",slug:"调试时指定单个-entry",children:[]},{level:3,title:"EJS 模版",slug:"ejs-模版",children:[]},{level:3,title:"指定调试时浏览器默认打开的页面",slug:"指定调试时浏览器默认打开的页面",children:[]},{level:3,title:"指定调试时的路径",slug:"指定调试时的路径",children:[]},{level:3,title:"通过 entry 字段更加灵活的开启 MPA",slug:"通过-entry-字段更加灵活的开启-mpa",children:[]}]}],filePathRelative:"guide/advanced/mpa.md",git:{updatedTime:1621570108e3,contributors:[]}}},8385:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<p>icejs 默认的应用类型是 SPA 单页应用，但在某些业务场景下存在 MPA 多页应用的诉求，基于此 icejs 内置提供了 MPA 的方案。</p><h2 id="工程配置"><a class="header-anchor" href="#工程配置">#</a> 工程配置</h2><p>在工程配置文件 <code>build.json</code> 中开启 MPA 应用配置：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;mpa&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="目录结构"><a class="header-anchor" href="#目录结构">#</a> 目录结构</h2><p>MPA 应用以页面为维度进行划分，符合 <code>src/pages/*/[index|app].[ts|js]</code> 的路径都会作为一个单独的 entry，整体结构：</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ├── build/\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   ├── js/\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   │    ├── dashboard.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   │    └── about.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   ├── css/\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   │    ├── dashboard.css\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   │    └── about.css\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   ├── dashboard.html\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   ├── about.html\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   └── favicon.png           # Favicon\n</span><span class="token prefix unchanged"> </span><span class="token line"> ├── public/\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> │   ├── index.html            # 默认 html\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> │   └── favicon.png           # Favicon\n</span><span class="token prefix unchanged"> </span><span class="token line"> ├── src/                      # 源码\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> │   ├── app.js\n</span><span class="token prefix deleted">-</span><span class="token line"> │   ├── routes.js\n</span><span class="token prefix deleted">-</span><span class="token line"> │   ├── store.js\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> │   └── pages/                # 页面\n</span><span class="token prefix unchanged"> </span><span class="token line"> │        ├── Dashboard/       # Dashboard 页面，一个完整的 SPA 页面\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> │        │     ├── app.js     # 页面配置入口\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> │        │     └── routes.jsx # 路由配置入口\n</span><span class="token prefix unchanged"> </span><span class="token line"> │        ├── About/           # About 页面，比较简单，直接渲染一个组件\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> │        │     └── index.jsx  # 页面组件入口\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> │        └── Market /         # Market 下没有 app 或者 index，不会作为一个 entry\n</span><span class="token prefix unchanged"> </span><span class="token line"> │              └── market.jsx\n</span><span class="token prefix unchanged"> </span><span class="token line"> ├── build.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> ├── package.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> └── tsconfig.json\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>如上结构，开启 mpa 之后将会包含 dashboard、about 两个 entry。</p><h2 id="不同的-entry-应用类型"><a class="header-anchor" href="#不同的-entry-应用类型">#</a> 不同的 entry 应用类型</h2><p>pages 下的每个 entry 可以是一个单独的 SPA，也可以是简单的一个页面组件，具体可以结合业务情况使用。</p><h3 id="spa-类型的-entry"><a class="header-anchor" href="#spa-类型的-entry">#</a> SPA 类型的 entry</h3><p>SPA 类型的 entry 整体跟 icejs 的 SPA 应用基本接近，包含 <code>app.js</code>, <code>routes.js</code> 等文件。</p><p>目录结构：</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ├── src/pages\n</span><span class="token prefix unchanged"> </span><span class="token line"> │    └──  Dashboard/\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> │         ├── DashboardA/index.jsx\n</span><span class="token prefix inserted">+</span><span class="token line"> │         ├── DashboardB/index.jsx\n</span><span class="token prefix inserted">+</span><span class="token line"> │         ├── models/               // 如有状态管理相关诉求\n</span><span class="token prefix inserted">+</span><span class="token line"> │         ├── store.js              // 如有状态管理相关诉求\n</span><span class="token prefix inserted">+</span><span class="token line"> │         ├── routes.js             // 路由配置\n</span><span class="token prefix inserted">+</span><span class="token line"> │         └── app.js\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ├── build.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> ├── package.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> └── tsconfig.json\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>应用入口：</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code>// src/pages/Dashboard/app.js\nimport { runApp } from &#39;ice&#39;;\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import store from &#39;./store&#39;;\n</span><span class="token prefix inserted">+</span><span class="token line"> import routes from &#39;./routes&#39;;\n</span></span>\nconst appConfig = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> app: {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   // 如有状态管理诉求，需要手动包裹 provider\n</span><span class="token prefix inserted">+</span><span class="token line">   addProvider: ({ children }) =&gt; {\n</span><span class="token prefix inserted">+</span><span class="token line">     return &lt;store.Provider&gt;{children}&lt;/store.Provider&gt;;\n</span><span class="token prefix inserted">+</span><span class="token line">   },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> router: {\n</span><span class="token prefix inserted">+</span><span class="token line">   // 需要手动引入 routes\n</span><span class="token prefix inserted">+</span><span class="token line">   routes\n</span><span class="token prefix inserted">+</span><span class="token line"> }\n</span></span>};\n\nrunApp(appConfig);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>接下来配置路由信息：</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code>// src/pages/Dashboard/routes.js\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import DashboardA from &#39;@/pages/Dashboard/DashboardA&#39;;\n</span><span class="token prefix inserted">+</span><span class="token line">import DashboardB from &#39;@/pages/Dashboard/DashboardB&#39;;\n</span></span>\nexport default [\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> {\n</span><span class="token prefix unchanged"> </span><span class="token line">   path: &#39;/foo&#39;,\n</span><span class="token prefix unchanged"> </span><span class="token line">   component: DashboardA\n</span><span class="token prefix unchanged"> </span><span class="token line"> },\n</span><span class="token prefix unchanged"> </span><span class="token line"> {\n</span><span class="token prefix unchanged"> </span><span class="token line">   path: &#39;/bar&#39;,\n</span><span class="token prefix unchanged"> </span><span class="token line">   component: DashboardB\n</span><span class="token prefix unchanged"> </span><span class="token line"> },\n</span></span>]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="组件类型的-entry"><a class="header-anchor" href="#组件类型的-entry">#</a> 组件类型的 entry</h3><p>如果只是渲染一个简单的组件/页面，直接在 <code>index.jsx</code> 中导出组件即可：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/pages/About/index.jsx</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">About</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span><span class="token operator">&gt;</span>About 页面<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>如果有 <code>export default</code> 那么框架会自动调用 <code>ReactDOM.render</code> 渲染组件，如果希望自行渲染组件的话则不需要通过 <code>export default</code> 导出组件。</p><h2 id="指定不同-entry-的-html-模板"><a class="header-anchor" href="#指定不同-entry-的-html-模板">#</a> 指定不同 entry 的 HTML 模板</h2><p>默认情况下，entryName 为 dashboard 的入口会优先使用 <code>public/dashboard.html</code> 作为 HTML 模板，如果该文件不存在则会使用 <code>public/index.html</code> 兜底。</p><p>同时 icejs 也支持通过 <code>template</code> 字段更加灵活的指定 HTML 模板：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token comment">// build.json</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;mpa&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;template&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;web.html&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Dashboard&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Home&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;about.html&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;About&quot;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>注意：通过 <code>entry</code> 字段配置的多页应用不支持配置 <code>mpa.template</code> 字段。</p></blockquote><h2 id="高级用法"><a class="header-anchor" href="#高级用法">#</a> 高级用法</h2><h3 id="调试时指定单个-entry"><a class="header-anchor" href="#调试时指定单个-entry">#</a> 调试时指定单个 entry</h3><p>默认 MPA 应用在开发阶段会启动所有页面，如果你只想调试某个页面，可以通过指定 <code>--mpa-entry</code> 来启动。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token string">&quot;scripts&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n  <span class="token string">&quot;start&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;icejs start --mpa-entry dashboard&quot;</span>,\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="ejs-模版"><a class="header-anchor" href="#ejs-模版">#</a> EJS 模版</h3><p>默认情况下 MPA 使用 <code>public/index.html</code> 作为 HTML 模版，如果存在一些简单的差异化渲染逻辑，可以通过 EJS 语法进行渲染。</p><p>可使用变量：</p><ul><li>NODE_ENV：可选值为 <code>development | production</code> 用来区分 start / build 命令</li><li>pageName：当前渲染页面的页面名称，默认为 src/pages 目录下的一级目录名（默认小写）</li></ul><p>html 中使用 EJS 语法：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x-ua-compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge,chrome=1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>current env: &lt;%= NODE_ENV %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    &lt;% if (pageName === &#39;Home&#39;) { %&gt;\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Home page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n    &lt;% } %&gt;\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ice-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="指定调试时浏览器默认打开的页面"><a class="header-anchor" href="#指定调试时浏览器默认打开的页面">#</a> 指定调试时浏览器默认打开的页面</h3><p>可以通过配置 <code>openPage</code> 指定多个页面时默认打开指定的页面。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;mpa&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;openPage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Home&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>注意：通过 <code>entry</code> 字段配置的多页应用不支持配置 <code>mpa.openPage</code> 字段。</p></blockquote><h3 id="指定调试时的路径"><a class="header-anchor" href="#指定调试时的路径">#</a> 指定调试时的路径</h3><p>本地开发默认以 pages 下的目录名为调试路径，比如 <code>src/pages/Dashboard</code> 下的 MPA 页面，在调试时将默认在 <code>http://localhost:3333/dashboard</code> 进行调试。 如果希望调试路径和最终部署时的路径一致，可以通过配置 <code>rewrites</code> 参数：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;mpa&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;rewrites&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;dashboard&quot;</span><span class="token operator">:</span> <span class="token string">&quot;site/dashboard&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上述的配置可以让 MPA 页面在 <code>http://localhost:3333/site/dashboard</code> 下进行调试，前端路由的 basename 可以同该路径保持一致，这样可以确保部署后无需额外针对 <code>basename</code> 进行的订正。</p><blockquote><p>如果 MPA 页面中不耦合路由，则不需要关心 rewrite 逻辑</p></blockquote><h3 id="通过-entry-字段更加灵活的开启-mpa"><a class="header-anchor" href="#通过-entry-字段更加灵活的开启-mpa">#</a> 通过 entry 字段更加灵活的开启 MPA</h3><p><code>mpa: true</code> 是 icejs 推荐的 MPA 最佳实践，但有一些场景可能会更加灵活，比如应用整体还是一个大的 SPA 应用，只是需要增加一个轻量的 entry，这时候可以直接在 <code>build.json</code> 中配置 entry 字段：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token comment">// build.json</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;entry&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/app&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;login&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/LoginEntry&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>对应目录结构：</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ├── public/\n</span><span class="token prefix unchanged"> </span><span class="token line"> ├── src/\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   ├── layouts/\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   ├── pages/\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   ├── routes.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> │   ├── app.js\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> │   └── LoginEntry.jsx\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ├── build.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> ├── package.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> └── tsconfig.json\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>LoginEntry.jsx</code> 只需要导出一个 React 组件即可。</p>',52),p={render:function(n,s){return e}}}}]);