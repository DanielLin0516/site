(self.webpackChunksite=self.webpackChunksite||[]).push([[5605],{5191:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>e});const e={key:"v-ba934fd8",path:"/config/",title:"工程配置",lang:"zh-CN",frontmatter:{title:"工程配置",order:7},excerpt:"",headers:[{level:3,title:"entry",slug:"entry",children:[]},{level:3,title:"alias",slug:"alias",children:[]},{level:3,title:"publicPath",slug:"publicpath",children:[]},{level:3,title:"devPublicPath",slug:"devpublicpath",children:[]},{level:3,title:"sourceMap",slug:"sourcemap",children:[]},{level:3,title:"externals",slug:"externals",children:[]},{level:3,title:"hash",slug:"hash",children:[]},{level:3,title:"polyfill",slug:"polyfill",children:[]},{level:3,title:"injectBabel",slug:"injectbabel",children:[]},{level:3,title:"minify",slug:"minify",children:[]},{level:3,title:"outputAssetsPath",slug:"outputassetspath",children:[]},{level:3,title:"outputDir",slug:"outputdir",children:[]},{level:3,title:"proxy",slug:"proxy",children:[]},{level:3,title:"devServer",slug:"devserver",children:[]},{level:3,title:"define",slug:"define",children:[]},{level:3,title:"browserslist",slug:"browserslist",children:[]},{level:3,title:"vendor",slug:"vendor",children:[]},{level:3,title:"libraryTarget",slug:"librarytarget",children:[]},{level:3,title:"library",slug:"library",children:[]},{level:3,title:"libraryExport",slug:"libraryexport",children:[]},{level:3,title:"compileDependencies",slug:"compiledependencies",children:[]},{level:3,title:"cssLoaderOptions",slug:"cssloaderoptions",children:[]},{level:3,title:"lessLoaderOptions",slug:"lessloaderoptions",children:[]},{level:3,title:"sassLoaderOptions",slug:"sassloaderoptions",children:[]},{level:3,title:"postcssOptions",slug:"postcssoptions",children:[]},{level:3,title:"postcssrc",slug:"postcssrc",children:[]},{level:3,title:"terserOptions",slug:"terseroptions",children:[]},{level:3,title:"babelPlugins",slug:"babelplugins",children:[]},{level:3,title:"babelPresets",slug:"babelpresets",children:[]},{level:3,title:"ignoreHtmlTemplate",slug:"ignorehtmltemplate",children:[]},{level:3,title:"eslint",slug:"eslint",children:[]},{level:3,title:"disableRuntime",slug:"disableruntime",children:[]},{level:3,title:"tsChecker",slug:"tschecker",children:[]},{level:3,title:"dll",slug:"dll",children:[]},{level:3,title:"dllEntry",slug:"dllentry",children:[]},{level:3,title:"webpackPlugins",slug:"webpackplugins",children:[]},{level:3,title:"webpackLoaders",slug:"webpackloaders",children:[]},{level:3,title:"modularImportRuntime",slug:"modularimportruntime",children:[]},{level:3,title:"esbuild",slug:"esbuild",children:[]}],filePathRelative:"config/README.md",git:{updatedTime:1621568448e3,contributors:[]}}},3931:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>bn});var e=a(6252);const l=(0,e.uE)('<h3 id="entry"><a class="header-anchor" href="#entry">#</a> entry</h3><ul><li>类型： <code>string</code>  | <code>object</code>  | <code>array</code></li><li>默认值：src/app.[t|j]s</li></ul><p>icejs 中一般不允许修改该配置。</p><h3 id="alias"><a class="header-anchor" href="#alias">#</a> alias</h3><ul><li>类型： <code>object</code></li><li>默认值： ``</li></ul><p>在 icejs 默认配置了 <code>{ &quot;@&quot;: &quot;./src/&quot; }</code> 的规则，因此项目大多数时候不需要配置，配置完成后则可以更加简单的导入模块了：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">-</span><span class="token keyword">import</span> CustomTips <span class="token keyword">from</span> <span class="token string">&#39;../../../components/CustomTips&#39;</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token keyword">import</span> CustomTips <span class="token keyword">from</span> <span class="token string">&#39;@/components/CustomTips&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="publicpath"><a class="header-anchor" href="#publicpath">#</a> publicPath</h3><ul><li>类型： <code>string</code></li><li>默认值： <code>/</code></li></ul>',9),o=(0,e.Uk)("配置 webpack 的  "),p={href:"https://webpack.js.org/configuration/output/#output-publicpath",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Uk)("output.publicPath"),c=(0,e.Uk)("  属性。 仅在运行  "),r=(0,e.Wm)("code",null,"build",-1),u=(0,e.Uk)("  命令时生效。"),i=(0,e.uE)('<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;publicPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.example.com/assets/&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="devpublicpath"><a class="header-anchor" href="#devpublicpath">#</a> devPublicPath</h3><ul><li>类型： <code>string</code></li><li>默认值： <code>/</code></li></ul><p>同 <code>publicPath</code>  仅在执行 <code>start</code>  时生效</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;devPublicPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1/&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="sourcemap"><a class="header-anchor" href="#sourcemap">#</a> sourceMap</h3><ul><li>类型： <code>boolean</code></li><li>默认值： <code>false</code></li></ul><h3 id="externals"><a class="header-anchor" href="#externals">#</a> externals</h3><ul><li>类型：<code>object</code></li><li>默认值：<code>{}</code></li></ul>',9),d=(0,e.Uk)("将某些  "),b=(0,e.Wm)("code",null,"import",-1),k=(0,e.Uk)("  的包排除在 bundle 之外，在运行时再去外部获取这些依赖。 比如，从 CDN 引入 React 资源，而不是将它打包"),m=(0,e.Wm)("br",null,null,-1),h=(0,e.Uk)("详细配置同 webpack 的  "),g={href:"https://webpack.js.org/configuration/externals/#externals",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Uk)("externals"),q=(0,e.Wm)("br",null,null,-1),f=(0,e.Uk)("例如通过配置  "),y=(0,e.Wm)("code",null,"externals",-1),j=(0,e.Uk)("  减少图表资源大小："),W=(0,e.Wm)("br",null,null,-1),U=(0,e.Uk)("在使用到图表（Bizcharts）的时候，会发现打包后的文件特别大。是由于图表库本身比较大，这样会影响页面的加载效率。可以通过 CDN 的方式加载图表库，在打包时排除掉对应的图标库。"),w=(0,e.uE)('<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;externals&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;bizcharts&quot;</span><span class="token operator">:</span> <span class="token string">&quot;BizCharts&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>说明：key 表示依赖包名，如： <code>bizcharts</code>。 value 表示引用 CDN 后的全局变量名，如: <code>BizCharts</code></p>',2),x=(0,e.Uk)("参考："),P={href:"https://github.com/alibaba/BizCharts",target:"_blank",rel:"noopener noreferrer"},E=(0,e.Uk)("https://github.com/alibaba/BizCharts"),_=(0,e.uE)('<p>将 CDN 文件添加到 <code>public/index.html</code> 中：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x-ua-compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge,chrome=1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>ICE Design Lite<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    +\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/bizcharts/umd/BizCharts.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="hash"><a class="header-anchor" href="#hash">#</a> hash</h3><ul><li>类型：<code>boolean</code> | <code>string</code></li><li>默认值：<code>false</code></li></ul><p>如果希望构建后的资源带 hash 版本，可以将  <code>hash</code>  设置为  <code>true</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>可以设置为 contenthash 的方式：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token string">&quot;contenthash&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="polyfill"><a class="header-anchor" href="#polyfill">#</a> polyfill</h3><ul><li>类型：<code>string</code></li><li>默认值：<code>&quot;entry&quot;</code></li><li>可选值：<code>&quot;usage&quot;</code> | <code>&quot;entry&quot;</code> | <code>false</code></li></ul><p>配置 <code>@babel/preset-env</code> 处理 <code>polyfill</code> 的逻辑，不同值的含义：</p><ul><li><code>entry</code>: 根据配置的 <code>browserslist</code> 字段在每个文件开头都引入对应的 <code>polyfill</code>。</li><li><code>false</code>: 不引入任何 <code>polyfill</code>。</li><li><code>usage</code>: 根据源码中使用到的代码按需引入 <code>polyfill</code>。</li></ul><p><strong>注意：</strong> 在 <code>usage</code> 模式下，默认不会去分析 <code>node_modules</code> 里的代码，如果需要的话，请看 <code>compileDependencies</code> 字段相关的说明，添加相关需要编译的依赖。</p><h3 id="injectbabel"><a class="header-anchor" href="#injectbabel">#</a> injectBabel</h3><p><strong>已废弃</strong>，请使用 <code>polyfill</code> 替代。</p><ul><li>类型：<code>string</code></li><li>默认值：<code>polyfill</code></li><li>可选值：<code>&quot;polyfill&quot;</code> | <code>&quot;runtime&quot;</code> | <code>false</code></li></ul><p>默认情况下会注入 core-js/stable 和 regenerator-runtime/runtime，根据  <code>targets</code>  配置的兼容浏览器进行 polyfill，实现按需添加。 开发类库项目，可以将配置设置为  <code>runtime</code>。 如果想手动 polyfill，可以将配置设置为  <code>false</code>，工程将不会进行自动的 polyfill。</p><h3 id="minify"><a class="header-anchor" href="#minify">#</a> minify</h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>true</code></li></ul><p>构建后的资源将进行压缩，如果不希望资源被压缩可以修改为  <code>false</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;minify&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="outputassetspath"><a class="header-anchor" href="#outputassetspath">#</a> outputAssetsPath</h3><ul><li>类型：<code>object</code></li><li>默认值：<code>{ js: &#39;js&#39;, css: &#39;css&#39; }</code></li></ul><p>修改构建后的 css/js 文件目录，默认情况下 css 在  <code>build/css/</code>  下，js 在  <code>build/js/</code>  下，可以通过  <code>outputAssetsPath</code>  配置修改：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;outputAssetsPath&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;js&quot;</span><span class="token operator">:</span> <span class="token string">&quot;js-dist&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;css&quot;</span><span class="token operator">:</span> <span class="token string">&quot;css-dist&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="outputdir"><a class="header-anchor" href="#outputdir">#</a> outputDir</h3><ul><li>类型：<code>string</code></li><li>默认值：<code>build</code></li></ul><p>修改构建后的文件目录</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;outputDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="proxy"><a class="header-anchor" href="#proxy">#</a> proxy</h3><ul><li>类型：<code>object</code></li><li>默认值：<code>{}</code></li></ul>',31),C=(0,e.Uk)("配置 webpack 的  "),D={href:"https://webpack.js.org/configuration/dev-server/#devserverproxy",target:"_blank",rel:"noopener noreferrer"},O=(0,e.Uk)("devServer.proxy"),L=(0,e.Uk)("  属性。"),R=(0,e.uE)('<blockquote><p>建议使用  <code>proxy</code>  来设置代理而不要修改 webpack 的  <code>devServer.proxy</code></p></blockquote><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;proxy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;/**&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:6001&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>代理的每一项配置都可以通过 enable 字段来快速开关代理配置</p></blockquote><h3 id="devserver"><a class="header-anchor" href="#devserver">#</a> devServer</h3><ul><li>类型： <code>object</code></li><li>默认值： <code>{}</code></li></ul><p>注意，devServer 不支持 port 属性配置，如需改变端口，请通过命令行参数传入。</p><h3 id="define"><a class="header-anchor" href="#define">#</a> define</h3><ul><li>类型： <code>object</code></li><li>默认值： <code>{}</code></li></ul><p>配置全局变量。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;define&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;ASSER_VERSION&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.1.0&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="browserslist"><a class="header-anchor" href="#browserslist">#</a> browserslist</h3><ul><li>类型： <code>string</code> | <code>object</code></li><li>默认值：<code>last 2 versions, Firefox ESR, &gt; 1%, ie &gt;= 9, iOS &gt;= 8, Android &gt;= 4</code></li></ul><p>配置 @babel/preset-env 的浏览器最低版本(https://babeljs.io/docs/en/babel-preset-env#targets)，新配置的 <code>browserslist</code>  会覆盖默认值。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;browserslist&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;chrome&quot;</span><span class="token operator">:</span> <span class="token number">49</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;ie&quot;</span><span class="token operator">:</span> <span class="token number">11</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>注: 因 targets 字段被使用，这里使用 browserslist 字段替代 @babel/preset-env 的 targets 字段。</p></blockquote><h3 id="vendor"><a class="header-anchor" href="#vendor">#</a> vendor</h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>true</code></li></ul><p>MPA 场景下配置是否生成 vendor，如果希望禁用：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;vendor&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="librarytarget"><a class="header-anchor" href="#librarytarget">#</a> libraryTarget</h3><ul><li>类型：<code>string</code></li><li>默认值：<code>&#39;&#39;</code></li></ul>',21),T=(0,e.Uk)("配置 webpack 的  "),S={href:"https://webpack.js.org/configuration/output/#outputlibrarytarget",target:"_blank",rel:"noopener noreferrer"},z=(0,e.Uk)("output.libraryTarget"),A=(0,e.Uk)("  属性。"),B=(0,e.Wm)("h3",{id:"library"},[(0,e.Wm)("a",{class:"header-anchor",href:"#library"},"#"),(0,e.Uk)(" library")],-1),N=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Uk)("类型："),(0,e.Wm)("code",null,"string")]),(0,e.Wm)("li",null,[(0,e.Uk)("默认值："),(0,e.Wm)("code",null,"''")])],-1),I=(0,e.Uk)("配置 webpack 的  "),H={href:"https://webpack.js.org/configuration/output/#outputlibrary",target:"_blank",rel:"noopener noreferrer"},M=(0,e.Uk)("output.library"),Y=(0,e.Uk)("  属性。"),F=(0,e.Wm)("h3",{id:"libraryexport"},[(0,e.Wm)("a",{class:"header-anchor",href:"#libraryexport"},"#"),(0,e.Uk)(" libraryExport")],-1),Q=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Uk)("类型："),(0,e.Wm)("code",null,"string")]),(0,e.Wm)("li",null,[(0,e.Uk)("默认值："),(0,e.Wm)("code",null,"''")])],-1),V=(0,e.Uk)("配置 webpack 的  "),$={href:"https://webpack.js.org/configuration/output/#outputlibraryexport",target:"_blank",rel:"noopener noreferrer"},G=(0,e.Uk)("output.libraryExport"),J=(0,e.Uk)("  属性。"),K=(0,e.uE)('<h3 id="compiledependencies"><a class="header-anchor" href="#compiledependencies">#</a> compileDependencies</h3><ul><li>类型：<code>array</code></li><li>默认值：<code>[]</code></li></ul><p>默认情况下 babel-loader 会编译相关模块以兼容 IE11。如果需要 babel 去编译 node_modules 下的指定文件，可以在这个配置快捷添加。</p><p>比如想编译 node_modules 下的 @alifd/next 依赖，可以进行如下设置：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;compileDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@alifd/next&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>注意：配置为 <code>&quot;compileDependencies&quot;: [&quot;&quot;]</code> 等同于不忽略 <code>node_modules</code>。</p><h3 id="cssloaderoptions"><a class="header-anchor" href="#cssloaderoptions">#</a> cssLoaderOptions</h3><ul><li>类型：<code>object</code></li><li>默认值：<code>{}</code></li></ul>',8),X=(0,e.Uk)("为 css-loader 提供快捷配置，将与默认配置进行浅合并。详细配置可参考 "),Z={href:"https://webpack.js.org/loaders/css-loader/#options",target:"_blank",rel:"noopener noreferrer"},ss=(0,e.Uk)("css-loader options"),ns=(0,e.Uk)("。"),as=(0,e.Wm)("h3",{id:"lessloaderoptions"},[(0,e.Wm)("a",{class:"header-anchor",href:"#lessloaderoptions"},"#"),(0,e.Uk)(" lessLoaderOptions")],-1),es=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Uk)("类型："),(0,e.Wm)("code",null,"object")]),(0,e.Wm)("li",null,[(0,e.Uk)("默认值："),(0,e.Wm)("code",null,"{}")])],-1),ls=(0,e.Uk)("为 less-loader 提供快捷配置，将与默认配置进行浅合并。详细配置可参考 "),os={href:"https://webpack.js.org/loaders/less-loader/#options",target:"_blank",rel:"noopener noreferrer"},ps=(0,e.Uk)("less-loader options"),ts=(0,e.Uk)("。"),cs=(0,e.Wm)("h3",{id:"sassloaderoptions"},[(0,e.Wm)("a",{class:"header-anchor",href:"#sassloaderoptions"},"#"),(0,e.Uk)(" sassLoaderOptions")],-1),rs=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Uk)("类型："),(0,e.Wm)("code",null,"object")]),(0,e.Wm)("li",null,[(0,e.Uk)("默认值："),(0,e.Wm)("code",null,"{}")])],-1),us=(0,e.Uk)("为 sass-loader 提供快捷配置，将与默认配置进行浅合并。详细配置可参考 "),is={href:"https://webpack.js.org/loaders/sass-loader/#options",target:"_blank",rel:"noopener noreferrer"},ds=(0,e.Uk)("sass-loader options"),bs=(0,e.Uk)("。"),ks=(0,e.uE)('<blockquote><p>ice.js 内置使用 sass 进行编译，如果期望使用 node-sass，请在项目中进行依赖</p></blockquote><h3 id="postcssoptions"><a class="header-anchor" href="#postcssoptions">#</a> postcssOptions</h3><ul><li>类型：<code>object</code></li><li>默认值：无</li></ul><p>配置方式：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;postcssOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;postcss-preset-env&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;browsers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;last 2 versions&quot;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;postcss-import&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;postcss-short&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;prefix&quot;</span><span class="token operator">:</span> <span class="token string">&quot;x&quot;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;syntax&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sugarss&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;parser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sugarss&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;stringifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sugarss&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>配置规则：</p><ul><li>工程已内置 <code>postcss-preset-env</code>，配置后将自动合并其参数</li><li>如果工程未内置 postcss 插件，对应配置将会添加到所以样式处理规则的 <code>postcss-loader</code> 配置上</li><li>设置为 <code>false</code> 的 postcss 插件，将从配置中移除</li></ul><h3 id="postcssrc"><a class="header-anchor" href="#postcssrc">#</a> postcssrc</h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>false</code></li></ul><p>适用于需要完全重写 postcss 配置。开启配置项后，工程上将清空内置 postcss 配置，读取 postcss 配置文件 postcssrc.js 或 postcss.config.js 中的配置。</p><h3 id="terseroptions"><a class="header-anchor" href="#terseroptions">#</a> terserOptions</h3><ul><li>类型：<code>object</code></li><li>默认值：<code>{}</code></li></ul><p>以生产环境移除 <code>console</code> 为例，可以进行如下配置：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;terserOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;compress&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;unused&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;drop_console&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',14),ms=(0,e.Uk)("为 terserPlugin 提供快捷配置，将与默认配置进行浅合并。详细配置可参考 "),hs={href:"https://github.com/terser/terser#minify-options",target:"_blank",rel:"noopener noreferrer"},gs=(0,e.Uk)("terser options"),vs=(0,e.uE)('<blockquote><p>注意该配置方式在 ice.js 1.17.2 版本以上开始支持</p></blockquote><h3 id="babelplugins"><a class="header-anchor" href="#babelplugins">#</a> babelPlugins</h3><ul><li>类型：<code>array</code></li><li>默认值：<code>[]</code></li></ul><p>为 babel-loader 的配置追加额外的 babel plugin。</p><h3 id="babelpresets"><a class="header-anchor" href="#babelpresets">#</a> babelPresets</h3><ul><li>类型：<code>array</code></li><li>默认值：<code>[]</code></li></ul><p>为 babel-loader 的配置追加额外的 babel preset。如果配置 preset 与内置相同，则优先使用 babelPresets 中的配置内容。</p><h3 id="ignorehtmltemplate"><a class="header-anchor" href="#ignorehtmltemplate">#</a> ignoreHtmlTemplate</h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>false</code></li></ul><p>开启后，在 <code>build</code> 构建时，将移除所有内置 html-webpack-plugin 设置，不再生成 html 文件。</p><h3 id="eslint"><a class="header-anchor" href="#eslint">#</a> eslint</h3><ul><li>类型：<code>boolean</code> | <code>object</code></li><li>默认值：<code>undefined</code></li></ul><p>说明：</p>',13),qs=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"undefined"),(0,e.Uk)("：即没有设置 eslint 选项，将 eslint 错误输出到终端里")],-1),fs=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"false"),(0,e.Uk)("：不检测 eslint 错误")],-1),ys=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"true"),(0,e.Uk)("：将 eslint 错误展示在预览页面上")],-1),js=(0,e.Wm)("code",null,"object",-1),Ws=(0,e.Uk)("：表现等同于 "),Us=(0,e.Wm)("code",null,"true",-1),ws=(0,e.Uk)("，同时支持配置 "),xs={href:"https://github.com/webpack-contrib/eslint-loader",target:"_blank",rel:"noopener noreferrer"},Ps=(0,e.Uk)("eslint-loader"),Es=(0,e.Uk)(" 的更多参数"),_s=(0,e.uE)('<h3 id="disableruntime"><a class="header-anchor" href="#disableruntime">#</a> disableRuntime</h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>false</code></li></ul><p>禁用运行时的能力，如需关闭配置为 <code>true</code> 即可。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;disableRuntime&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="tschecker"><a class="header-anchor" href="#tschecker">#</a> tsChecker</h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>false</code></li></ul><p>默认关闭 TypeScript 类型检测，如需开启配置为 <code>true</code> 即可。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;tsChecker&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="dll"><a class="header-anchor" href="#dll">#</a> dll</h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>false</code></li></ul>',10),Cs=(0,e.Uk)("是否启用 "),Ds={href:"https://webpack.js.org/plugins/dll-plugin/",target:"_blank",rel:"noopener noreferrer"},Os=(0,e.Wm)("code",null,"DllPlugin",-1),Ls=(0,e.Uk)(" 构建 "),Rs=(0,e.Wm)("code",null,"DLL",-1),Ts=(0,e.Uk)("。"),Ss=(0,e.uE)('<p>配置为 <code>true</code> 时，默认为 <code>package.json</code> <code>dependencies</code> 构建 <code>DLL</code>。可通过 <code>dllEntry</code> 字段配置指定依赖。</p><p>启用该选项后，进行 <code>Webpack</code> 构建时，会在目录中生成 <code>dll</code> 文件夹，包含 <code>dll</code> 相关代码。</p><p><code>dll</code> 构建产物无需 <code>git</code> 提交，建议加到 <code>.gitignore</code> 中。</p><h3 id="dllentry"><a class="header-anchor" href="#dllentry">#</a> dllEntry</h3><ul><li>类型：<code>object</code></li><li>默认值：<code>{}</code></li></ul><p>开启 <code>dll</code> 后，可通过该选项配置指定依赖。 配置格式为：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token punctuation">[</span>string<span class="token punctuation">]</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>以 <code>react</code>、<code>react-dom</code> 为例:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// build.json</span>\n<span class="token punctuation">{</span>\n  <span class="token string">&quot;react&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;react-dom&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>产物如下：</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>dll // dll 构建产物文件夹\n├── 7265616374.dll.js // dllEntry 中配置内容的构建产物。文件名根据 dllEntry 中键生成，此处为 react。\n├── 7265616374.manifest.json // DllReferencePlugin 使用\n└── dll-pkg.json // build.json 中所配置的 dllEntry 信息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="webpackplugins"><a class="header-anchor" href="#webpackplugins">#</a> webpackPlugins</h3><ul><li>类型：<code>object</code></li><li>默认值：无</li></ul><p>通过 <code>webpackPlugins</code> 可以方便地新增或者修改工程上的 webpack 插件配置。</p><p>配置方式：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;webpackPlugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;webpack.ProvidePlugin&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;options&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module1&quot;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;HtmlWebpackPlugin&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;before&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack.ProvidePlugin&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>配置规则如下：</p><ul><li>对于 webpack 内置的 plugins，可以通过 webpack.PluginName 的形式作为 key 值进行配置</li><li>对于其他 webpack 插件，需要将插件的 npm 包名作为 key 值进行配置，package.json 中需要添加并安装该插件依赖</li><li>每一项插件配置支持 before/after 用来调整 webpack 插件执行顺序</li><li>如果配置设置的插件已被添加，则修改插件配置</li></ul><h3 id="webpackloaders"><a class="header-anchor" href="#webpackloaders">#</a> webpackLoaders</h3><ul><li>类型：<code>object</code></li><li>默认值：无</li></ul><p>通过 <code>webpackLoaders</code> 可以方便地新增或者修改工程上的 webpack loader 配置。</p><p>配置方式：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;webpackLoaders&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;css&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.css$&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;loaders&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;style-loader&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">&quot;options&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;loaderoption&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;before&quot;</span><span class="token operator">:</span> <span class="token string">&quot;less-loader&quot;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>配置规则如下：</p>',24),zs=(0,e.Uk)("webpackLoaders 配置下每一项为具体的 webpack loader 规则，支持参数 "),As=(0,e.Uk)("test：配置类型 "),Bs=(0,e.Wm)("code",null,"string|string[]",-1),Ns=(0,e.Uk)("，同 "),Is={href:"https://webpack.js.org/configuration/module/#ruletest",target:"_blank",rel:"noopener noreferrer"},Hs=(0,e.Uk)("Rule.test"),Ms=(0,e.Uk)("oneOf：配置类型 "),Ys=(0,e.Wm)("code",null,"[oneOfName: string]: { resourceQuery: string; loaders: Loaders }",-1),Fs=(0,e.Uk)("，同"),Qs={href:"https://webpack.js.org/configuration/module/#ruleoneof",target:"_blank",rel:"noopener noreferrer"},Vs=(0,e.Uk)("Rule.oneOf"),$s=(0,e.Wm)("li",null,"includeClear：清除默认 include 配置",-1),Gs=(0,e.Uk)("include：配置类型 "),Js=(0,e.Wm)("code",null,"string|string[]",-1),Ks=(0,e.Uk)("，同 "),Xs={href:"https://webpack.js.org/configuration/module/#ruleinclude",target:"_blank",rel:"noopener noreferrer"},Zs=(0,e.Uk)("Rule.include"),sn=(0,e.Wm)("li",null,"excludeClear：清除默认 exclude 配置",-1),nn=(0,e.Uk)("exclude：配置类型 "),an=(0,e.Wm)("code",null,"string|string[]",-1),en=(0,e.Uk)("，同 "),ln={href:"https://webpack.js.org/configuration/module/#ruleexclude",target:"_blank",rel:"noopener noreferrer"},on=(0,e.Uk)("Rule.exclude"),pn=(0,e.uE)("<li>pre：配置类型 <code>boolean</code>，配置 rule 的 enforce 值为 pre</li><li>post：配置类型 <code>boolean</code>，配置 rule 的 enforce 值为 post</li><li>before：配置类型 <code>string</code>，用于配置定义顺序，前置指定</li><li>after：配置类型 <code>string</code>，用于配置定义顺序，后置指定</li><li>loaders：配置具体的 webpack loader</li>",5),tn=(0,e.Wm)("li",null,"loaders 参数用来指定具体 webpack loader 的参数；每一项 loader 参数支持 before/after 用来调整 webpack loader 的执行顺序；如果 loader 名已被添加，则修改插件配置",-1),cn=(0,e.uE)('<h3 id="modularimportruntime"><a class="header-anchor" href="#modularimportruntime">#</a> modularImportRuntime</h3><ul><li>类型：<code>boolean</code></li><li>默认值：<code>true</code></li></ul><blockquote><p>ice.js 1.14.0 版本以上开始支持</p></blockquote><p>开启后将按需加载运行时能力，以减小构建包体积</p><h3 id="esbuild"><a class="header-anchor" href="#esbuild">#</a> esbuild</h3><ul><li>类型：<code>object</code></li><li>默认值：无</li></ul>',6),rn=(0,e.Uk)("使用 esbuild 对构建产物进行压缩，可选配置参考 "),un={href:"https://github.com/privatenumber/esbuild-loader#minifyplugin",target:"_blank",rel:"noopener noreferrer"},dn=(0,e.Uk)("esbuild 配置文档"),bn={render:function(s,n){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,(0,e.Wm)("p",null,[o,(0,e.Wm)("a",p,[t,(0,e.Wm)(a)]),c,r,u]),i,(0,e.Wm)("p",null,[d,b,k,m,h,(0,e.Wm)("a",g,[v,(0,e.Wm)(a)]),q,f,y,j,W,U]),w,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[x,(0,e.Wm)("a",P,[E,(0,e.Wm)(a)])])]),_,(0,e.Wm)("p",null,[C,(0,e.Wm)("a",D,[O,(0,e.Wm)(a)]),L]),R,(0,e.Wm)("p",null,[T,(0,e.Wm)("a",S,[z,(0,e.Wm)(a)]),A]),B,N,(0,e.Wm)("p",null,[I,(0,e.Wm)("a",H,[M,(0,e.Wm)(a)]),Y]),F,Q,(0,e.Wm)("p",null,[V,(0,e.Wm)("a",$,[G,(0,e.Wm)(a)]),J]),K,(0,e.Wm)("p",null,[X,(0,e.Wm)("a",Z,[ss,(0,e.Wm)(a)]),ns]),as,es,(0,e.Wm)("p",null,[ls,(0,e.Wm)("a",os,[ps,(0,e.Wm)(a)]),ts]),cs,rs,(0,e.Wm)("p",null,[us,(0,e.Wm)("a",is,[ds,(0,e.Wm)(a)]),bs]),ks,(0,e.Wm)("p",null,[ms,(0,e.Wm)("a",hs,[gs,(0,e.Wm)(a)])]),vs,(0,e.Wm)("ul",null,[qs,fs,ys,(0,e.Wm)("li",null,[js,Ws,Us,ws,(0,e.Wm)("a",xs,[Ps,(0,e.Wm)(a)]),Es])]),_s,(0,e.Wm)("p",null,[Cs,(0,e.Wm)("a",Ds,[Os,(0,e.Wm)(a)]),Ls,Rs,Ts]),Ss,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[zs,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[As,Bs,Ns,(0,e.Wm)("a",Is,[Hs,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[Ms,Ys,Fs,(0,e.Wm)("a",Qs,[Vs,(0,e.Wm)(a)])]),$s,(0,e.Wm)("li",null,[Gs,Js,Ks,(0,e.Wm)("a",Xs,[Zs,(0,e.Wm)(a)])]),sn,(0,e.Wm)("li",null,[nn,an,en,(0,e.Wm)("a",ln,[on,(0,e.Wm)(a)])]),pn])]),tn]),cn,(0,e.Wm)("p",null,[rn,(0,e.Wm)("a",un,[dn,(0,e.Wm)(a)])])],64)}}}}]);