(self.webpackChunksite=self.webpackChunksite||[]).push([[7017],{4716:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-7b088005",path:"/guide/basic/app.html",title:"应用入口",lang:"zh-CN",frontmatter:{title:"应用入口",order:2},excerpt:"",headers:[{level:2,title:"配置规范",slug:"配置规范",children:[]},{level:2,title:"启动项配置",slug:"启动项配置",children:[]},{level:2,title:"其他配置项",slug:"其他配置项",children:[]}],filePathRelative:"guide/basic/app.md",git:{updatedTime:1621391522e3,contributors:[]}}},1673:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<p>框架通过调用 <code>runApp</code> 创建渲染整个应用，在创建应用时可以传入应用的全局配置。</p><h2 id="配置规范"><a class="header-anchor" href="#配置规范">#</a> 配置规范</h2><p>通过 <code>src/app.ts</code> 对应用进行全局配置，设置路由、运行环境、请求、日志等：</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> runApp<span class="token punctuation">,</span> IAppConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ice&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 应用配置</span>\n<span class="token keyword">const</span> appConfig<span class="token operator">:</span> IAppConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  app<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  router<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  store<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  request<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  logger<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token function">runApp</span><span class="token punctuation">(</span>appConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="启动项配置"><a class="header-anchor" href="#启动项配置">#</a> 启动项配置</h2><p><code>app</code> 这一项所支持的配置：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> runApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ice&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> appConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  app<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 可选，根节点 id，默认为 ice-container</span>\n    rootId<span class="token operator">:</span> <span class="token string">&#39;ice-container&#39;</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 可选，根节点 DOM 元素，更灵活的 rootId</span>\n    mountNode<span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;ice-container&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 可选，是否解析路由组件的查询参数，默认 true</span>\n    parseSearchParams<span class="token operator">:</span> <span class="token boolean">true</span>\n\n    <span class="token comment">// 可选，自定义添加 Provider</span>\n    <span class="token function-variable function">addProvider</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token operator">&lt;</span>ConfigProvider<span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>ConfigProvider<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 可选，常用于 SSR 场景或者异步获取数据请求的场景</span>\n    <span class="token comment">// 如果返回字段中包含 initialStates 字段将会作为状态管理 store 的初始值</span>\n    <span class="token comment">// 如果返回字段中包含 auth 字段将会作为权限管理 auth 的初始值</span>\n    <span class="token function-variable function">getInitialData</span><span class="token operator">:</span> <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 可选，自定义错误边界的 fallback UI</span>\n    ErrorBoundaryFallback<span class="token operator">:</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>渲染错误<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 可选，自定义错误的处理事件</span>\n    onErrorBoundaryHander<span class="token operator">:</span> <span class="token punctuation">(</span>error<span class="token punctuation">,</span> componentStack<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Do something with the error</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 可选，用于渲染一个简单组件，不再需要耦合 react-router 的路由系统</span>\n    <span class="token comment">// 需要配合设置 build.json 的 router 项为 false</span>\n    renderComponent<span class="token operator">:</span> SimpleComponent<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token function">runApp</span><span class="token punctuation">(</span>appConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="其他配置项"><a class="header-anchor" href="#其他配置项">#</a> 其他配置项</h2><ul><li><a href="/docs/guide/basic/router#%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE">路由配置</a></li><li><a href="/docs/guide/basic/request#%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE">请求配置</a></li><li><a href="/docs/guide/basic/store#%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0">状态管理配置</a></li><li><a href="/docs/guide/basic/logger#%E9%85%8D%E7%BD%AE">日志配置</a></li><li>...其他更多自定义插件配置</li></ul>',9),e={render:function(n,s){return p}}}}]);